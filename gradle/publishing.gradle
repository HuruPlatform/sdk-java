//nexusPublishing {
//    // to release to sonatype use ./gradlew publishToSonatype
//    repositories {
//        sonatype {
//            username = project.hasProperty('ossrhUsername') ? project.property('ossrhUsername') : ''
//            password = project.hasProperty('ossrhPassword') ? project.property('ossrhPassword') : ''
//        }
//    }
//}

subprojects {
    apply plugin: 'maven-publish'
    apply plugin: 'signing'

    publishing {
        publications {
            mavenJava(MavenPublication) {
                afterEvaluate {
                    plugins.withId('java-platform') {
                        from components.javaPlatform
                    }
                    plugins.withId('java') {
                        from components.java
                    }
                }
            }
        }
        // to test local publishing use ./gradlew publish and comment nexusPublishing
        repositories {
            maven {
                def releasesRepoUrl = "$System.env.HOME/.m2/repository"
                def snapshotsRepoUrl = "$System.env.HOME/.m2/repository"
                url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            }
            maven {
                def releasesRepoUrl = "https://artifactory-oss.shared.huru.co/artifactory/libs-release"
                def snapshotsRepoUrl = "https://artifactory-oss.shared.huru.co/artifactory/libs-snapshot"
                url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
                credentials {
                    username "developer"
                    password "AP9sPYqDaSKM8PBGtT4rikUUKx8"
                }
            }
        }
    }

    if (project.hasProperty('signing.keyId')) {
        signing {
            sign publishing.publications.mavenJava
        }
    }

    //customize the pom in afterEvaluate to allow subproject build.gradle files to
    //contribute the description field
    afterEvaluate { subproject ->
        subproject.publishing.publications.mavenJava {
            pom {
                name = subproject.description
                description = subproject.description
                url = 'https://github.com/temporalio/sdk-java'

                scm {
                    connection = 'scm:git@github.com:temporalio/sdk-java.git'
                    developerConnection = 'scm:git@github.com:temporalio/sdk-java.git'
                    url = 'https://github.com/temporalio/sdk-java.git'
                }

                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                developers {
                    developer {
                        id = 'mfateev'
                        name = 'Maxim Fateev'
                        email = 'maxim@temporal.io'
                    }
                    developer {
                        id = 'samarabbas'
                        name = 'Samar Abbas'
                        email = 'samar@temporal.io'
                    }
                }
            }
        }
    }
}
